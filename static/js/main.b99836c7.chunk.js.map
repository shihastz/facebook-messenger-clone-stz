{"version":3,"sources":["Message.js","firebase.js","messenger.svg","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","username","undefined","isUser","className","Card","CardContent","Typography","color","variant","componrnt","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","sanpshot","docs","map","doc","id","data","prompt","src","Img","alt","width","height","FormControl","InputLabel","Input","placeholder","value","onChange","event","target","IconButton","disabled","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUA2BeA,G,MAvBCC,sBAAW,WAAsBC,GAAS,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,SAClC,QAAgBC,IAAZF,EAAsB,CACtB,IAAMG,EAASF,IAAaD,EAAQC,SACpC,OACI,qBAAKF,IAAKA,EAAKK,UAAS,kBAAaD,GAAU,iBAA/C,SACI,cAACE,EAAA,EAAD,CAAMD,UAAWD,EAAS,mBAAqB,oBAA/C,SACI,cAACG,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAYC,MAAM,QAAQC,QAAQ,KAAKC,UAAU,KAAjD,WACEP,GAAD,UAAcH,EAAQC,UAAR,eAAd,MADD,IACwDD,EAAQA,iBAOhF,OACI,4B,iBCLGW,EAbKC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,iDACZC,YAAa,wDACbC,UAAW,iCACXC,cAAe,6CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGMC,Y,iCCbR,MAA0B,sC,iBCqE1BC,MAzDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEmBF,mBAAS,CAAC,KAF7B,mBAENG,EAFM,KAEIC,EAFJ,OAGmBJ,mBAAS,IAH5B,mBAGNvB,EAHM,KAGI4B,EAHJ,KA4Bb,OAvBAC,qBAAU,WACRnB,EAAGoB,WAAW,YACbC,QAAQ,YAAa,QACrBC,YAAW,SAAAC,GACVN,EAAYM,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CAACC,GAAGD,EAAIC,GAAItC,QAAQqC,EAAIE,iBAE/D,IAEHT,qBAAU,WACRD,EAAYW,OAAO,qBAClB,IAcD,sBAAKpC,UAAU,MAAf,UACE,qBAAKqC,IAAKC,EAAKtC,UAAU,aAAauC,IAAI,MAAMC,MAAM,KAAKC,OAAO,OAClE,0CAAa5C,KAEb,cAAC,IAAD,UAGE0B,EAASS,KAAI,gBAAEE,EAAF,EAAEA,GAAItC,EAAN,EAAMA,QAAN,OACX,cAAC,EAAD,CAAkBC,SAAUA,EAAUD,QAASA,GAAjCsC,QAKlB,sBAAMlC,UAAU,YAAhB,SACA,eAAC0C,EAAA,EAAD,CAAa1C,UAAU,mBAAvB,UACE,cAAC2C,EAAA,EAAD,mCACA,cAACC,EAAA,EAAD,CAAO5C,UAAU,aAAa6C,YAAY,qBAAqBC,MAAOzB,EAAO0B,SAAU,SAAAC,GAAK,OAAI1B,EAAS0B,EAAMC,OAAOH,UACtH,cAACI,EAAA,EAAD,CAAYlD,UAAU,kBAAkBmD,UAAW9B,EAAO+B,QA7B5C,SAAAJ,GAClBA,EAAMK,iBACN9C,EAAGoB,WAAW,YAAY2B,IAAI,CAC5B1D,QAAQyB,EACRxB,SAASA,EACT0D,UAAU/C,IAASU,UAAUsC,WAAWC,oBAI1CnC,EAAS,KAoB2EjB,QAAQ,YAAYD,MAAM,UAA1G,SACE,cAAC,IAAD,WAKJ,sBAAKJ,UAAU,YAAf,kBAAgC,cAAC,IAAD,CAAcI,MAAM,UAAUsD,SAAS,UAAvE,sBCpDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b99836c7.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\r\nimport {Card, CardContent, Typography} from '@material-ui/core';\r\nimport \"./Message.css\";\r\n\r\nconst Message = forwardRef(({message, username}, ref) => {\r\n    if (message !== undefined){\r\n        const isUser = username === message.username;\r\n        return (\r\n            <div ref={ref} className={`message ${isUser && 'message__user'}`}>\r\n                <Card className={isUser ? \"message_userCard\" : \"message_guestCard\"}>\r\n                    <CardContent>\r\n                        <Typography color=\"white\" variant=\"h5\" componrnt=\"h2\">\r\n                        {!isUser && `${message.username || `Unknown User`} :`} {message.message}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n    \r\n    \r\n})\r\n\r\nexport default Message\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyDjLhUHgEslIwK0LEY55dntVQzBmzCmyUo\",\r\n  authDomain: \"facebook-messenger-clone-f8710.firebaseapp.com\",\r\n  databaseURL: \"https://facebook-messenger-clone-f8710.firebaseio.com\",\r\n  projectId: \"facebook-messenger-clone-f8710\",\r\n  storageBucket: \"facebook-messenger-clone-f8710.appspot.com\",\r\n  messagingSenderId: \"382265458873\",\r\n  appId: \"1:382265458873:web:989556ec8d6c5b249c1b68\",\r\n  measurementId: \"G-F1Z1X42HGL\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;","export default __webpack_public_path__ + \"static/media/messenger.8536cd55.svg\";","import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport {FormControl, InputLabel, Input} from '@material-ui/core';\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nimport Img from './messenger.svg';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([{}]);\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n    db.collection('messages')\n    .orderBy('timestamp', 'desc')\n    .onSnapshot(sanpshot => {\n      setMessages(sanpshot.docs.map(doc => ({id:doc.id, message:doc.data()})))\n    })\n  }, [])\n\n  useEffect(() => {\n    setUsername(prompt('Enter username'));\n  }, [])\n\n  const sendMessage = event => {\n    event.preventDefault();\n    db.collection('messages').add({\n      message:input,\n      username:username,\n      timestamp:firebase.firestore.FieldValue.serverTimestamp()\n\n    })\n    //setMessages([...messages, {username:username, message:input}]);\n    setInput('');\n  }\n  return (\n    <div className=\"App\">\n      <img src={Img} className=\"app__image\" alt=\"pic\" width=\"50\" height=\"50\" />\n      <h3>Welcome {username}</h3>\n  \n      <FlipMove>\n      {\n        \n        messages.map(({id, message}) => (\n          <Message key={id} username={username} message={message}/>\n        ))\n      }\n      </FlipMove>\n\n      <form className=\"app__form\">\n      <FormControl className=\"app__formControl\"> \n        <InputLabel>Enter the message...</InputLabel>\n        <Input className=\"app__input\" placeholder=\"Enter a message...\" value={input} onChange={event => setInput(event.target.value)}/>\n        <IconButton className=\"app__iconButton\" disabled={!input} onClick={sendMessage} variant=\"contained\" color=\"primary\">\n          <SendIcon />\n        </IconButton>\n      </FormControl>\n      </form>\n      \n      <div className=\"made_with\">Made <FavoriteIcon color=\"primary\" fontSize=\"small\"/> with Shihas</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}